# -*- coding: utf-8 -*-
"""LVADSUSR105_lab3_cls.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F2jKYhzSEKm4dsp4hVf1du8j0jeET5Oe
"""

#Clustering
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
import xgboost as xgb
from sklearn.cluster import KMeans
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, precision_score, recall_score,confusion_matrix,f1_score,classification_report,r2_score,mean_squared_error,mean_absolute_error, silhouette_score
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data  = pd.read_csv("/content/drive/MyDrive/seeds.csv")
df = pd.DataFrame(data)
df.info()
df

ncount  = df.isnull().sum()
print(ncount)

df.fillna(df.mean(),inplace=True)


plt.figure(figsize=(10,7))
sns.boxplot(data=df)
plt.show()

q1  = df.quantile(0.25)
q3  = df.quantile(0.75)
iqr = q3-q1
outlier = ((df<q1-iqr*1.5 )| (df>q3+iqr*1.5)).any(axis=1)

ndf = df[~outlier]
plt.figure(figsize=(10,7))
sns.boxplot(data=ndf)
plt.show()

std = StandardScaler()
x_std = std.fit_transform(df)

elbow  = []
sil = []
for k in range(1,11):
  kmeans  = KMeans(n_clusters=k,random_state=0)
  kmeans.fit(x_std)
  elbow.append(kmeans.inertia_)

for s  in range(1,11):
  label = kmeans.labels_
  sil.append(silhouette_score(x_std,label))

plt.plot(range(1,11),elbow)
plt.plot(range(1,11),sil)

ncluster = 3

model = KMeans(n_clusters=ncluster)
model.fit(x_std)

clusters  = model.cluster_centers_
labells = model.labels_

plt.scatter(x_std[:,0],x_std[:,1],s=50,label=labells)
plt.scatter(clusters[:,0],clusters[:,1],s=200,label=labells)

