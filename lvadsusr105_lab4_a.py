# -*- coding: utf-8 -*-
"""LVADSUSR105_lab4_A.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k8_-jdrrtN2xMFgG7D9uCvZmlhmV0ie1
"""

#Anamoly
import pandas as pd
from sklearn.ensemble import RandomForestClassifier, IsolationForest
import xgboost as xgb
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, precision_score, recall_score,confusion_matrix,f1_score,classification_report,r2_score,mean_squared_error,mean_absolute_error
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data  = pd.read_csv("/content/drive/MyDrive/social_network.csv")
df = pd.DataFrame(data)
df.info()
df

ncount  = df.isnull().sum()
print(ncount)

print("there is no null")

encode = LabelEncoder()
df["account_status"] = encode.fit_transform(df["account_status"])
df

x= df[["account_status","login_activity","posting_activity","social_connections"]]
y= df["suspicious_activity"]

x_train,x_test,y_train,y_test  = train_test_split(x,y,test_size=0.3,random_state=42)

model = IsolationForest()
model.fit(x_train)

output = model.predict(x_test)

df["dec"]=model.decision_function(x_train)

anamolies  = df.loc[df[[df["dec"]<0]]]



plt.scatter(anamolies[:,0],anamolies[:,1])
plt.scatter(df[:,0],df[:,1])

